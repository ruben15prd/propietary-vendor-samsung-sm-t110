%    Copyright (C) 1996 Aladdin Enterprises.  All rights reserved.
% 
%  This file is part of GNU ghostscript
%
%  GNU ghostscript is free software; you can redistribute it and/or modify it under
%  the terms of the version 2 of the GNU General Public License as published by the Free Software
%  Foundation.
%
%  GNU ghostscript is distributed in the hope that it will be useful, but WITHOUT
%  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
%  FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
%
%  You should have received a copy of the GNU General Public License along with
%  ghostscript; see the file COPYING. If not, write to the Free Software Foundation,
%  Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
%
% $Id: gs_typ42.ps,v 1.7 2008/05/04 14:34:57 Arabidopsis Exp $
% Type 42 font support code.

% Here are the BuildChar and BuildGlyph implementation for Type 42 fonts.
% The names %Type42BuildChar and %Type42BuildGlyph are known to the
% interpreter.  The real work is done in an operator:
%	<font> <code|name> <name> <glyphindex> .type42execchar -

(%Type42BuildChar) cvn	% <font> <code> %Type42BuildChar -
 { 1 index /Encoding get 1 index get .type42build
 } bind def
(%Type42BuildGlyph) cvn	% <font> <name> %Type42BuildGlyph -
 { dup .type42build
 } bind def
/.type42build		% <font> <code|name> <name> .type42build -
 { 2 index begin
    dup CharStrings exch .knownget not
     { 2 copy eq { exch pop /.notdef exch } if
       QUIET not
	{ (Substituting .notdef for ) print
	  =string cvs print ( in the font ) print
	  1 index /FontName get = flush
	}
	{ pop }
       ifelse
       /.notdef CharStrings /.notdef get
     } if
   end .type42execchar
 } bind def

% Register the font type for definefont.
buildfontdict 42 
  { % check for bogus sfnts -- this happens in Genoa FTS 421-01.ps
    dup /sfnts get 0 get length 14 lt {	% smallest valid sfnts is 14 bytes
      % HACK: Add a BuildGlyph and make this a Type 3 font instead
      dup /FontType 3 put
      dup /BuildGlyph {
  	1 index /CharStrings get exch 2 copy known not { pop /.notdef } if get exec
      } bind put
      //.buildfont3 exec
    } {
      systemdict /.buildfont42 get exec
    } ifelse
  } bind 
put


